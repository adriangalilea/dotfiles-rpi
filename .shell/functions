#!/usr/bin/env bash

# --- directories ---

# Create directory and cd into it
mc() {
  if [ $# -ne 1 ]; then
    echo "usage: mc <dir-name>"
    return 137
  fi
  local dir_name="$1"
  mkdir -p "$dir_name" && cd "$dir_name"
}

# Display or change the directory stack
d() {
  if [[ -n $1 ]]; then
    dirs "$@"
  else
    dirs -v | head -n 10
  fi
}
compdef _dirs d

# Change to the previous directory only on non mac systems
if [[ "$(uname -s)" != "Darwin" ]]; then
  -() {
    cd -
  }
fi

# --- file listing ---

files() {
    if [[ ! -x "$(command -v eza)" ]]; then
        echo -e "\033[1;33mMagic Dashboard: \`eza\` not installed.\033[0m" && return 1
    fi
    echo
    
    eza --icons --color=always --git -d "$PWD"
    
    echo
    
    local eza_output
    local max_files_lines=${MAGIC_DASHBOARD_FILES_LINES:-6}
    local ignore_pattern=".DS_Store|Icon?|Thumbs.db|desktop.ini"
    eza_output=$(
        eza --width="$COLUMNS" --grid --color=always --icons \
            --ignore-glob="$ignore_pattern" \
            --sort=name --group-directories-first --no-quotes \
            --git --long --no-user --no-permissions --no-filesize --no-time
    )
    if [[ $(echo "$eza_output" | wc -l) -gt $max_files_lines ]]; then
        local shortened
        shortened="$(echo "$eza_output" | head -n"$max_files_lines")"
        printf "%s \033[1;36mâ€¦\033[0m\n" "$shortened"
    elif [[ -n "$eza_output" ]]; then
        echo "$eza_output"
    fi
    echo
}

# --- Ctrl+S zsh sourcing ---

source_zshrc() {
  source ~/.zshrc
}

# Disable terminal flow control (Ctrl+S/Ctrl+Q) to free up Ctrl+S
if [[ $- == *i* ]] && [[ -t 0 ]]; then
  stty -ixon 2>/dev/null || true
fi

zle -N source_zshrc
bindkey "^s" source_zshrc

# --- Ctrl+G lazygit ---

run_lazygit() {
  lazygit
}
zle -N run_lazygit
bindkey "^g" run_lazygit

# --- Ctrl+H helix ---

run_helix() {
  h
}
zle -N run_helix
bindkey "^h" run_helix


# --- Yazi ---

function yy() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

zle -N yy
bindkey "^y" yy

